// SPDX-License-Identifier: MIT
pragma solidity >=0.8.0;

/* Autogenerated file. Do not edit manually. */

interface IERC721System {
  function balanceOf(bytes16 namespace, address owner) external view returns (uint256);

  function ownerOf(bytes16 namespace, uint256 _tokenId) external view returns (address);

  function proxy(bytes16 namespace) external view returns (address);

  function totalSupply(bytes16 namespace) external view returns (uint256);

  function name(bytes16 namespace) external view returns (string memory);

  function symbol(bytes16 namespace) external view returns (string memory);

  function getAddress() external view returns (address);

  function tokenURI(bytes16 namespace, uint256 tokenId) external view returns (string memory);

  function approve(bytes16 namespace, address to, uint256 tokenId) external;

  function getApproved(bytes16 namespace, uint256 tokenId) external view returns (address);

  function setApprovalForAll(bytes16 namespace, address operator, bool approved) external;

  function isApprovedForAll(bytes16 namespace, address owner, address operator) external view returns (bool);

  function transferFrom(bytes16 namespace, address _from, address to, uint256 tokenId) external;

  function safeTransferFrom(bytes16 namespace, address _from, address to, uint256 tokenId) external;

  function safeTransferFromWithData(
    bytes16 namespace,
    address _from,
    address to,
    uint256 tokenId,
    bytes memory data
  ) external;
}
